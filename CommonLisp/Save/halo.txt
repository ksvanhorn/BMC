; 1: form
; 2: halo
; 3: garbage


(setq 'halo-model
'(file
  (args
    nresp nvars nlevels mu_nu sigma_nu cp
    sigma_mu_y_form sigma_beta alpha_lambda_y_form beta_lambda_y_form
    sigma_mu_x_form dof_Sigma_x_form inverse_scale_Sigma_x_form
    sigma_mu_x_halo sigma_gamma alpha_sigma_x_halo beta_sigma_x_halo
    sigma_mu_x_garb alpha_lambda_x_garb beta_lambda_x_garb
    alpha_p_segment)
  (reqs
    (is_integernn nresp)
    (is_integer nvars) (<= 3 nvars)
    (is_integer nlevels) (<= 3 nlevels)
    (is_arr mu_nu is_real (list 3))
    (is_arr sigma_nu is_realp (list 3))
    (is_arr cp is_real (list nlevels))
      (for-all k (1 (- nlevels 2)) (< (@ cp k) (@ cp (+ k 1))))
    (is_realp sigma_mu_y_form)
    (is_realp sigma_mu_x_form)
    (is_realp sigma_beta)
    (is_realp alpha_lambda_y_form)
    (is_realp beta_lambda_y_form)
   
    (is_real dof_Sigma_x_form) (> dof_Sigma_x_form (- nvars 2))
    (is_arr inverse_scale_Sigma_x_form is_real (list (- nvars 1) (- nvars 1)))
      (is_symm_pd inverse_scale_Sigma_x_form)
    (is_realp sigma_gamma)
    (is_arr sigma_mu_x_halo is_realp (list nvars))
    (is_realp alpha_sigma_x_halo)
    (is_realp beta_sigma_x_halo)

    (is_arr sigma_mu_x_garb is_realp (list nvars))
    (is_arr alpha_lambda_x_garb is_realp (list nvars))
    (is_arr beta_lambda_x_garb is_realp (list nvars))

    (is_arr alpha_p_segment is_realnn (list 3))
      (< 0 (sum h (1 3) (@ alpha_p_segment h))))
  (vars
    mu_tls Sigma_tls nu tls tau scale v c
    x segment
    mu_y_form sigma_y_form lambda_y_form beta mu_x_form Sigma_x_form
    ksi mu_x_halo gamma sigma_x_halo lambda_x_halo
    mu_x_garb sigma_x_garb lambda_x_garb
    p_segment)
  (invs
    (is_arr mu_tls is_real (list 2))
    (is_arr Sigma_tls is_real (list 2 2)) (is_symm_pd Sigma_tls)
    (is_arr nu is_real (list 3))
    (is_arr tls is_real (list nresp 2))
    (is_arr tau is_real nresp)
    (is_arr scale is_realp nresp)
    (is_arr v (rng_integer 1 nlevels) (list nresp nvars))
    (is_arr c is_real (list nresp nvars (- nlevels 1)))
      (for-all i (1 nresp)
        (for-all k (1 (- nlevels 2)) (< (@ c i k) (@ c i (+ k 1)))))
    (is_arr x is_real (list nresp nvars))
    (is_arr segment (rng_integer 1 3) (list nresp))
    (is_real mu_y_form)
    (is_arr beta is_real (list (- nvars 1)))
    (is_realp sigma_y_form)
    (is_realp lambda_y_form)
    (is_arr mu_x_form is_real (list (- nvars 1)))
    (is_arr Sigma_x_form is_real (list (- nvars 1) (- nvars 1)))
      (is_symm_pd Sigma_x_form)
    (is_arr ksi is_real (list nresp))
    (is_arr mu_x_halo is_real (list nvars))
    (is_arr gamma is_real (list nvars))
    (is_arr sigma_x_halo is_realp (list nvars))
    (is_arr lambda_x_halo is_realp (list nvars))
    (is_arr mu_x_garb is_real (list nvars))
    (is_arr sigma_x_garb is_realp (list nvars))
    (is_arr lambda_x_garb is_realp (list nvars))
    (is_arr p_segment is_realnn (list 3))
      (0 < (sum h (1 3) (@ p_segment h))))
  (model
    ; scale usage
    (<- mu_tls (list 0 (neg (/ (@ Sigma_tls 2 2) 2))))
    (<- (@ Sigma_tls 1 1) (exp (@ nu 1)))
    (<- (@ Sigma_tls 2 2) (exp (@ nu 2)))
    (<- (@ Sigma_tls 1 2)
        (* (exp (/ (+ (@ nu 1) (@ nu 2)) 2)) (tanh (@ nu 3))))
    (<- (@ Sigma_tls 2 1) (@ Sigma_tls 1 2))
    (for h (1 3)
      (~ (@ nu h) (dnorm (@ mu_nu h) (@ sigma_nu h))))
    (for i (1 nresp)
      (for j (1 nvars)
        (~ (@ v i j) (dinterval (@ x i j) (@ c i nil))))
      (for k (1 nlevels)
	(<- (@ c i k) (/ (- (@ cp k) (@ tau i)) (@ scale i))))
      (~ (@ tls i nil) (dmvnorm mu_tls Sigma_tls))
      (<- (@ tau i) (@ tls i 1))
      (<- (@ scale i) (exp (@ tls i 2))))

    ; formers
    (for i (1 nresp)
      (for dummy (1 (= 1 (@ segment i)))
        (~ (@ x i 1)
           (dnorm (+ mu_y_form (dot (@ x i (rng 2 nvars)) (@ beta i nil)))
                  sigma_y_form)
        (~ (@ x i (rng 2 nvars))
           (dmvnorm mu_x_form Sigma_x_form))))
    (~ mu_y_form (dnorm 0 sigma_mu_y_form))
    (<- sigma_y_form (/ 1 (sqrt lambda_y_form)))
    (~ lambda_y_form (dgamma alpha_lambda_y_form beta_lambda_y_form))
    (for j (1 (- nvars 1))
      (~ (@ beta j) (dnorm 0 sigma_beta))
      (~ (@ mu_x_form j) (dnorm 0 sigma_mu_x_form)))
    (~ Sigma_x_form
       (dinvwishart dof_Sigma_x_form inverse_scale_Sigma_x_form))

    ; haloers
    (for (i 1 (nresp))
      (for dummy (1 (= 2 (@ segment i)))
        (~ (@ ksi i) (dnorm 0 1))
        (for j (1 nvars)
           (~ (@ x i j)
              (dnorm (+ (@ mu_x_halo j) (* (@ gamma j) (@ ksi i)))
                     (@ sigma_x_halo j))))))
    (for j (1 nvars)
      (~ (@ gamma j) (dnorm 0 sigma_gamma))
      (~ (@ mu_x_halo j)(dnorm 0 (@ sigma_mu_x_halo j)))
      (<- (@ sigma_x_halo j) (/ 1 (sqrt (@ lambda_x_halo j))))
      (~ (@ lambda_x_halo j)
         (dgamma alpha_sigma_x_halo beta_sigma_x_halo)))

    ; garbage
    (for (i 1 (nresp))
      (for dummy (1 (= 3 (@ segment i)))
        (for j (1 nvars)
          (~ (@ x i j)
             (dnorm (@ mu_x_garb j) (@ sigma_x_garb j))))))
    (for j (1 nvars)
      (~ (@ mu_x_garb j) (dnorm 0 (@ sigma_mu_x_garb j)))
      (<- (@ sigma_x_garb j) (/ 1 (sqrt (@ lambda_x_garb j))))
      (~ (@ lambda_x_garb j)
         (dgamma alpha_lambda_x_garb beta_lambda_x_garb)))

    ; segments
    (for i (1 nresp)
      (~ (@ segment i) (dcat p_segment)))
    (~ p_segment (ddirch alpha_p_segment)))))
)
