#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-VAR-DECL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|TYPE-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|TYPE-CTOR| |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PREDICATE->TYPE-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|PREDICATE-SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-EXPR-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|EXPR|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-EXPR-STRING-PREC|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|EXPR| |COMMON-LISP-USER|::|PREC|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|IS-INDEXER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-INDEX-EXPR-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|IS-QUANTIFIER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-QUANTIFIER-EXPR-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-FCT-EXPR-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-BINOP-EXPR-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|EXPR| |COMMON-LISP-USER|::|CONTEXT-PREC|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OP-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|IS-BINOP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRECEDENCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|OP|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-EXPR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-SPACES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|N|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-REL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|INDENTATION| |COMMON-LISP-USER|::|REL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-IF-REL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|INDENTATION| |COMMON-LISP|::|KEYWORD|
    |COMMON-LISP-USER|::|CLAUSES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-MODEL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|MODEL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|WITH-OUTPUT-TO-FILE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|WITH-OUTPUT-TO-FILE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|WITH-OUTPUT-TO-FILE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|FILENAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|WITH-OUTPUT-TO-FILE|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|STRM| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|WITH-OPEN-FILE|
          (,|COMMON-LISP-USER|::|STRM| ,|COMMON-LISP-USER|::|FILENAME|
           :|DIRECTION| :|OUTPUT|)
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|*STANDARD-OUTPUT*| ,|COMMON-LISP-USER|::|STRM|))
           ,@|COMMON-LISP-USER|::|BODY|))))))))
  '(|COMMON-LISP-USER|::|FILENAME| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MY-SYMBOL-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|S|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|COMMENT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|COMMENT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|COMMENT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|_|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|COMMENT|
      |COMMON-LISP|::|NIL|))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|_|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-MODEL-ARGS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|MDL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-MODEL-VARS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|MDL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-PRECONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|MDL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|$BAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|$EXTRACT_ASSUMPTIONS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|MDL-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAXIMA-SYMBOL-TO-LISP-SYMBOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|S|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-ASSUMPTIONS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|MDL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-TYPE-PRED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|TO-MAXIMA-EXPR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|TO-MAXIMA-SYMBOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|S|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|TO-MAXIMA-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|VERIFY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|VERIFY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|VERIFY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|EXPR|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|VERIFY|
       `(|COMMON-LISP|::|UNLESS| ,|COMMON-LISP-USER|::|EXPR|
         (|COMMON-LISP|::|ERROR|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "Assertion failed: ~a"
           ',|COMMON-LISP-USER|::|EXPR|))))))))
  '(|COMMON-LISP-USER|::|EXPR|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|X| |COMMON-LISP|::|&KEY|
    (|COMMON-LISP-USER|::|STRICT| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-TYPE-REQS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTRACT-TYPE-RESTRICTION-FROM-DECL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ARR-FOR-ALL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|DIMS|
    |COMMON-LISP-USER|::|PRED| |COMMON-LISP-USER|::|IDX_VARS|)))
